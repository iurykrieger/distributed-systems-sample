version: '3.4'

services:

  read-api:
    build: './apps/read-api'
    command: npm run start:dev
    volumes:
      - ./apps/read-api/src:/usr/app/src
      - ./apps/read-api/node_modules:/usr/app/node_modules
    ports:
      - "3001:3000"
    depends_on:
      - elasticsearch
      - prometheus
    environment:
      ELASTIC_SEARCH_URL: "http://elasticsearch:9200"

  write-api:
    build: './apps/write-api'
    command: npm run start:dev
    volumes:
      - ./apps/write-api/src:/usr/app/src
      - ./apps/write-api/node_modules:/usr/app/node_modules
      - ./data/products:/usr/app/data/products
    ports:
      - "3000:3000"
    depends_on:
      - elasticsearch
      - prometheus
    environment:
      ELASTIC_SEARCH_URL: "http://elasticsearch:9200"

  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - ./docker/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    environment:
      -  GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    volumes:
      - ./docker/grafana/grafana.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./docker/grafana/datasources/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - 8080:3000
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    deploy:
      resources:
        limits:
          memory: 4GB
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
      - ./docker/elasticsearch/elasticsearch.yaml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.10.2
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
